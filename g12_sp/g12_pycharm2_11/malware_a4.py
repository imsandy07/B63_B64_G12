import os
import pandas as pd

FILE_SIGNATURES = {
    "504B0304": ("ZIP Archive", ".zip"),
    "89504E47": ("PNG Image", ".png"),
    "D0CF11E0": ("Microsoft Office Document (Pre-2007)", ".doc"),
    "3C21444F": ("HTML File", ".html"),
    "49443303": ("MP3 Audio File", ".mp3"),
    "25504446": ("PDF Document", ".pdf"),
    "47494638": ("GIF Image", ".gif"),
    "3026B275": ("Windows Media File (ASF)", ".wmv"),
    "00000018": ("MP4 Video File", ".mp4"),
    "52617221": ("RAR Archive", ".rar"),
}

def read_file_signature(file_path, num_bytes=8):
    with open(file_path, "rb") as f:
        return f.read(num_bytes).hex().upper()

def identify_file_type(hex_signature):
    for sig, (file_type, extension) in FILE_SIGNATURES.items():
        if hex_signature.startswith(sig):
            return file_type, extension
    return "Unknown", "Unknown"

def analyze_files(directory):
    results = []
    if not os.path.exists(directory):
        print("Directory not found!")
        return []

    for filename in os.listdir(directory):
        file_path = os.path.join(directory, filename)

        if filename.startswith(".") or not os.path.isfile(file_path):
            continue

        hex_sig = read_file_signature(file_path)
        file_type, extension = identify_file_type(hex_sig)

        results.append((filename, hex_sig, file_type, extension))

    return results

FILES_DIR = "Files for Signature"

results = analyze_files(FILES_DIR)

df = pd.DataFrame(results, columns=["Filename", "Hex Signature", "Detected Type", "Suggested Extension"])
print(df)
